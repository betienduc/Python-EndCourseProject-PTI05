from PyQt6.QtWidgets import QMainWindow, QApplication, QMessageBox, QListWidget, QPushButton,QCommandLinkButton, QCheckBox
from PyQt6 import uic
from datetime import *
import sys
import json
import os

def is_valid(username, password): #b·ªô l·ªçc ti·∫øng vi·ªát v√† k√≠ t·ª± l·∫°
    for char in username:
        if not ('!' <= char <= '~'):
            return False
    for char in password:
        if not ('!' <= char <= '~'):
            return False
    return True
class User():
    def __init__(self, name, password, username):
        self.name = name
        self.password = password
        self.username = username
    def to_dict(self):  # bi·∫øn ƒë·ªïi d·ªØ li·ªáu qua JSON
        return {
            'name': self.name,
            'password': self.password,
            'username': self.username
        }

class Userlist():
    def __init__(self):
        self.items = [] # danh s√°ch ng∆∞·ªùi d√πng
    def add_item(self, item):
        self.items.append(item) # th√™m ng∆∞·ªùi d√πng v√†o danh s√°ch
    def JSONreturn(self):
        return [item.to_dict() for item in self.items]
class task():
    def __init__(self, name, deadline, priority, completed=False):
        self.name = name
        self.deadline = deadline  
        self.priority = priority
        self.completed = completed
    def to_dict(self):
        return {
            'name': self.name,
            'deadline': self.deadline,
            'priority': self.priority,
            'completed': self.completed
        }
class tasklist():
    def __init__(self):
        self.items = []
        
    def add_item(self, item):
        self.items.append(item)
    def delete_item(self, item):
        self.items.remove(item)
    def is_complete(self):
        complete_s = True
        msg_box = QMessageBox
        not_completed = []
        for item in self.items:
            if not item.completed:
                complete_s = False
                not_completed.append(item.name)
                msg_box.setIcon(QMessageBox.Icon.Information)
                msg_box.setWindowTitle("C√≤n nh·ªØng nhi·ªám v·ª• n√†o ch∆∞a l√†m ?üìú")
                msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
                
        if complete_s == False:
            msg_box.setText("B·∫°n c√≥ mu·ªën ho√†n th√†nh nh·ªØng nhi·ªám v·ª• sau kh√¥ng ?\n" + ", ".join(not_completed))
            msg_box.exec()
        elif complete_s:
            msg_box.setText("T·∫•t c·∫£ nhi·ªám v·ª• ƒë√£ ƒë∆∞·ª£c ho√†n th√†nh")
            msg_box.exec()
    def JSONreturn(self):
        return [item.to_dict() for item in self.items]
    
class dangki_page(QMainWindow):
    def __init__(self):
        super().__init__()
        uic.loadUi("D:/Programming Languages/Python/EndCourseProject-PYI/UI/dangki.ui",self)
        self.userlist = Userlist() # danh s√°ch ng∆∞·ªùi d√πng
        self.loadlist()#t·∫£i d·ªØ li·ªáu ng∆∞·ªùi d√πng
        #s·ª± ki·ªán c√≥ t√†i kho·∫£n
        self.cotk=self.findChild(QCommandLinkButton,"dacotaikhoan")
        self.cotk.clicked.connect(self.show_dangnhap)
        #s·ª± ki·ªán ·∫•n n√∫t ƒëƒÉng k√≠
        self.ndangki=self.findChild(QPushButton,"dangki_button")
        self.ndangki.clicked.connect(self.dangkitaikhoan)
    #ƒë·ªãnh nghƒ©a s·ª± ki·ªán c√≥ t√†i kho·∫£n
    def show_dangnhap(self):
        global showdangnhap
        showdangnhap.show()
        self.close()
    def show_main(self):
        global showmain
        showmain.show()
        self.close()
    #t·∫£i d·ªØ li·ªáu
    def loadlist(self):
        with open('D:/Programming Languages/Python/EndCourseProject-PYI/Data/User.json','r') as f:
            data = json.load(f)
            for item in data:
                self.userlist.add_item(User(item["name"],item["password"],item["username"]))
    #ƒëƒÉng k√≠ t√†i kho·∫£n
    def dangkitaikhoan(self):
        self.dk_tendangnhap = self.tendangki_lineedit.text()
        self.dk_mkdangnhap = self.matkhaudangki_lineedit.text()
        self.dk_tenhienthi = self.tenhienthi_lineedit.text()
        #c·∫£nh b√°o l·ªói th√¥ng tin
        if self.dk_tendangnhap == "" or self.dk_mkdangnhap == "" or self.dk_tenhienthi == "":
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setText("Vui loÃÄng ƒëieÃÇÃÄn ƒëaÃÇÃÄy ƒëuÃâ thoÃÇng tin ...‚úç(‚óî‚ó°‚óî)")
            msg_box.setWindowTitle("CaÃânh baÃÅo ‚ùå")
            msg_box.setWindowIcon(QMessageBox.Icon.Warning)
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
        elif len(self.dk_mkdangnhap) < 8:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setText("M·∫≠t kh·∫©u b·∫Øt bu·ªôc ph·∫£i c√≥ t·ªëi thi·ªÉu 8 k√≠ t·ª± (‚òûÔæü„ÉÆÔæü)‚òû ********")
            msg_box.setWindowTitle("C·∫£nh b√°o ‚ùå")
            msg_box.setWindowIcon(QMessageBox.Icon.Warning)
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
        elif not is_valid(self.dk_tendangnhap,self.dk_mkdangnhap):
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setWindowTitle("C·∫£nh b√°o ‚ùå")
            msg_box.setWindowIcon(QMessageBox.Icon.Warning)
            msg_box.setText("T√™n ƒëƒÉng nh·∫≠p v√† m·∫≠t kh·∫©u ch·ªâ ƒë∆∞·ª£c ph√©p d√πng k√≠ t·ª± Latin , ch·ªØ s·ªë '0' '1'...'9' v√† c√°c k√≠ t·ª± nh∆∞: '!' '@' '#' '$' '%' '^' '&' '*' '(' ')'")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
        elif self.dk_tendangnhap in [user.username for user in self.userlist.items]:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setWindowTitle("C·∫£nh b√°o ‚ùå")
            msg_box.setWindowIcon(QMessageBox.Icon.Warning)
            msg_box.setText("T√™n ƒëƒÉng nh·∫≠p n√†y ƒë√£ ƒë∆∞·ª£c ƒëƒÉng k√≠ üìç")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
        else:
            name = self.dk_tenhienthi
            password = self.dk_mkdangnhap
            username = self.dk_tendangnhap
            self.person=User(name,password,username)
            self.userlist.add_item(self.person)
            with open('User.json','w') as f: 
                json.dump(self.userlist.JSONreturn(),f,indent=4)
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Information)
            msg_box.setWindowIcon(QMessageBox.Icon.NoIcon)
            msg_box.setWindowTitle("ƒêƒÉng k√≠ thaÃÄnh coÃÇng‚ú®")
            msg_box.setText(f"Ch√†o m·ª´ng {name}, b·∫°n ƒë√£ ƒëƒÉng k√≠ th√†nh c√¥ng t√†i kho·∫£n {username} ")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
            self.close()
            self.show_main()


class dangnhap_page(QMainWindow):
    def __init__(self):
        super().__init__()
        uic.loadUi("D:/Programming Languages/Python/EndCourseProject-PYI/UI/dangnhap.ui",self)
        self.userlist = Userlist()
        #s·ª± ki·ªán kh√¥ng c√≥ t√†i kho·∫£n
        self.khongcotk=self.findChild(QCommandLinkButton,"chuacotaikhoan")
        self.khongcotk.clicked.connect(self.show_dangki)
        self.dangnhap=self.findChild(QPushButton,"dangnhap_button")
        self.dangnhap.clicked.connect(self.dangnhaptaikhoan)

        self.loadlist()
    def loadlist(self): #t√†i d·ªØ li·ªáu ng∆∞·ªùi d√πng
        with open('D:/Programming Languages/Python/EndCourseProject-PYI/Data/User.json','r') as f:
            data = json.load(f)
            for item in data:
                self.userlist.add_item(User(item["name"],item["password"],item["username"]))
    #ƒë·ªãnh nghƒ©a s·ª± ki·ªán kh√¥ng c√≥ t√†i kho·∫£n
    def show_dangki(self):
        global showdangki
        showdangki.show()
        self.close()
    def show_main(self):
        global showmain
        showmain.show()
        self.close()
    def dangnhaptaikhoan(self):
        self.dn_tendangnhap = self.tendangnhap_lineedit.text()
        self.dn_mkdangnhap = self.matkhaudangnhap_lineedit.text()
        self.check = self.findChild(QCheckBox,"robotcheck")
        # Ki·ªÉm tra ƒë·ªãnh d·∫°ng
        if self.dn_tendangnhap == "" or self.dn_mkdangnhap == "":
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setWindowTitle("C·∫£nh b√°o ‚ùå")
            msg_box.setText("Vui loÃÄng ƒëieÃÇÃÄn ƒëaÃÇÃÄy ƒëuÃâ thoÃÇng tin ...‚úç(‚óî‚ó°‚óî)")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
        elif not is_valid(self.dn_tendangnhap,self.dn_mkdangnhap):
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setWindowTitle("C·∫£nh b√°o ‚ùå")
            msg_box.setText("T√™n ƒëƒÉng nh·∫≠p v√† m·∫≠t kh·∫©u ch·ªâ ƒë∆∞·ª£c ph√©p d√πng k√≠ t·ª± Latin , ch·ªØ s·ªë '0' '1'...'9' v√† c√°c k√≠ t·ª± nh∆∞: '!' '@' '#' '$' '%' '^' '&' '*' '(' ')'")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
        elif not(self.dn_tendangnhap in [user.username for user in self.userlist.items]):
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setWindowTitle("C·∫£nh b√°o ‚ùå")
            msg_box.setText(f"Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n {self.dn_tendangnhap}üîç‚ùå")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
        elif not self.check.isChecked():
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setWindowTitle("C·∫£nh b√°o ‚ùå")
            msg_box.setText("Robot ∆∞?ü§®ü§î ch√∫ng t√¥i kh√¥ng cho robot v√†oü§ñüö´")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
        elif not (self.dn_mkdangnhap in [user.password for user in self.userlist.items]):
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setWindowTitle("C·∫£nh b√°o ‚ùå")
            msg_box.setText(f"Sai m·∫≠t kh·∫©u‚ùå")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
        else:
            for i in range(len(self.userlist.items)):
                if self.dn_tendangnhap == self.userlist.items[i].username and self.dn_mkdangnhap == self.userlist.items[i].password:
                    name = self.userlist.items[i].name
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Information)
            msg_box.setWindowTitle("ƒêƒÉng nh·∫≠p thaÃÄnh coÃÇng‚ú®")
            msg_box.setText(f"Ch√†o m·ª´ng {name}!")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
            self.show_main()
            self.close()

class main_page(QMainWindow):
    def __init__(self):
        super().__init__()
        uic.loadUi("D:/Programming Languages/Python/EndCourseProject-PYI/UI/main.ui",self)
        #thi·∫øt l·∫≠p c√°c n√∫t trong giao di·ªán ch√≠nh   
        self.nhiemvu=self.findChild(QPushButton,"nhiemvu_button")
        self.nhiemvu.clicked.connect(self.show_nhiemvu)
        #self.tientrinh=self.findChild(QPushButton,"tientrinh_button")
        #self.tientrinh.clicked.connect(self.show_tientrinh)
        self.comingsoon=self.findChild(QPushButton,"comingsoon_button")
        self.comingsoon.clicked.connect(self.show_comingsoon)

    #ƒë·ªãnh nghƒ©a ch·ª©c nƒÉng c·ªßa c√°c nut trong giao di·ªán ch√≠nh
    def show_nhiemvu(self):
        global shownhiemvu
        shownhiemvu.show()
        self.close()
    #def show_tientrinh(self):
    def show_comingsoon(self):
            msg_box=QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Information)
            msg_box.setWindowTitle("C·∫≠p nh·∫≠t s·∫Øp t·ªõiüéØ")
            msg_box.setText("C·∫≠p nh·∫≠t ch·ª©c nƒÉng Ghi ch√∫ üìù, nh·∫Øc nh·ªü th∆∞·ªùng xuy√™n ‚è∞ v√† c·∫≠p nh·∫≠t th√™m ch·ªânh th·ªùi gian trong ng√†y cho deadlineüïí ")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
class nhiemvu_page(QMainWindow):
    def __init__(self):
        super().__init__()
        uic.loadUi("D:/Programming Languages/Python/EndCourseProject-PYI/UI/mainlist.ui",self)

        self.list=self.findChild(QListWidget,"todolist")
        self.loadlist()
        self.tennhiemvu=self.tennv.text()
        self.thembutton=self.findChild(QPushButton,"them_button")
        self.thembutton.clicked.connect(self.them)
        self.xoabutton=self.findChild(QPushButton,"xoa_button")
        self.xoabutton.clicked.connect(self.xoa)
        self.chinhsuabutton=self.findChild(QPushButton,"chinhsua_button")
        self.chinhsuabutton.clicked.connect(self.chinhsua)
        self.sapxepbutton=self.findChild(QPushButton,"sapxep_button")
        self.sapxepbutton.clicked.connect(self.sapxep)
        self.hoanthanhbutton=self.findChild(QPushButton,"hoanthanh_button")
        self.hoanthanhbutton.clicked.connect(self.hoanthanh)
        self.lenbutton=self.findChild(QPushButton,"len_button")
        self.lenbutton.clicked.connect(self.len)
        self.xuongbutton=self.findChild(QPushButton,"xuong_button")
        self.xuongbutton.clicked.connect(self.xuong)
        self.bianbutton=self.findChild(QPushButton,"bian_button")
        self.bianbutton.clicked.connect(self.sukienbian)
        self.uutien.value()
        self.deadline.date()
        self.tasklist=tasklist()
    def len(self):
        pass
    def xuong(self):
        pass
    def them(self):
        if(self.uutien =="" or self.deadline =="" or self.tennhiemvu ==""):
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setWindowTitle("C·∫£nh b√°o ‚ùå")
            msg_box.setText("Vui loÃÄng ƒëieÃÇÃÄn ƒëaÃÇÃÄy ƒëuÃâ thoÃÇng tin ...‚úç(‚óî‚ó°‚óî) ")
            msg_box.setStandardButtons(QMessageBox.StandardButton.Ok)
            msg_box.exec()
        else:
            self.list.addItem(self.tennhiemvu)
            self.tennhiemvu.setText("")
            self.tasklist.add_item(self.tennhiemvu,self.deadline,self.uutien)
            with open('D:\Programming Languages\Python\EndCourseProject-PYI\Data\List.json','w') as f:
                json.dump(self.tasklist.JSONreturn(),f,indent=4)

    def loadlist(self):
        with open('D:\Programming Languages\Python\EndCourseProject-PYI\Data\List.json','r') as f:
            self.data=tasklist(json.load(f))
        for i in self.data.tasks:
            self.list.addItem(i)
    def xoa(self):
        clicked=self.list.currentRow()
        self.list.takeItem(clicked)
        self.tasklist.delete_item(clicked)
    def chinhsua(self):
        pass
    def sapxep(self):
        pass
    def hoanthanh(self):
        pass
    def sukienbian(self):
        pass

if __name__ == "__main__":
    
    app = QApplication(sys.argv)
    showdangki = dangki_page()
    showdangnhap = dangnhap_page()
    showmain = main_page()
    shownhiemvu = nhiemvu_page()

    showdangnhap.show()
    sys.exit(app.exec())